upstream app {
  server app-container:3000;
}

proxy_cache_path /tmp/leaderboard levels=1:2 keys_zone=leaderboard:10m inactive=12h max_size=256m;
proxy_cache_path /tmp/reports levels=1:2 keys_zone=reports:10m inactive=1h max_size=256m;

server {
  listen 80;
  server_name _;
  client_max_body_size 5M;

  root /usr/src/app/public;
  index index.html;

  location / {
    try_files $uri $uri/index.html @upstream;
  }

  location /leaderboard {
    proxy_cache leaderboard;
    proxy_cache_methods GET;
    proxy_cache_valid 200 12h;
    proxy_ignore_headers Cache-Control;
    add_header X-Cache-Status $upstream_cache_status;

    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  error_page 418 = @upstream;
  location /reports {
    if ( $arg_user_id != "" ) {
      # Here we don't want to have cache when user is requesting its own reports.
      # pretty ugly to use error_page to jump to `location @upstream` block..
      return 418;
    }
    proxy_cache reports;
    proxy_cache_methods GET;
    proxy_cache_valid 200 1h;
    proxy_ignore_headers Cache-Control;
    add_header X-Cache-Status $upstream_cache_status;

    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location @upstream {
    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
