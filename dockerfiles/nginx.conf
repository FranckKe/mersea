upstream app {
  server app-container:3000;
}

proxy_cache_path /tmp/leaderboard levels=1:2 keys_zone=leaderboard:10m inactive=12h max_size=128m;
proxy_cache_path /tmp/reports levels=1:2 keys_zone=reports:10m inactive=1h max_size=128m;

server {
  listen 80;
  server_name _;
  client_max_body_size 5M;

  root /usr/src/app/public;
  index index.html;

  # gzip
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

  location / {
    try_files $uri $uri/index.html @upstream;
  }

  location ~* (service-worker\.js)$ {
    add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    expires off;
    proxy_no_cache 1;
  }

  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    expires -1;
  }

  # assets, media
  location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
    expires 30d;
    access_log off;
  }

  # svg, fonts
  location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
    add_header Access-Control-Allow-Origin "*";
    expires 30d;
    add_header Cache-Control "public";
    access_log off;
  }

  location = /leaderboard {
    proxy_cache leaderboard;
    proxy_cache_methods GET;
    proxy_cache_valid 200 12h;
    proxy_ignore_headers Cache-Control;
    add_header X-Cache-Status $upstream_cache_status;

    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  error_page 442 = @upstream;
  location = /reports {
    if ( $arg_user_id != "" ) {
      # Here we don't want to have cache when user is requesting its own reports.
      # pretty ugly to use error_page to jump to `location @upstream` block..
      return 442;
    }

    proxy_cache reports;
    proxy_cache_key $scheme$proxy_host$uri$http_accept$is_args$args;
    proxy_cache_methods GET;
    proxy_cache_valid 200 1h;
    proxy_ignore_headers Cache-Control;
    add_header X-Cache-Status $upstream_cache_status;

    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location @upstream {
    proxy_pass http://app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
